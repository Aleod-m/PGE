mod lexer;
pub use lexer::*;
// "IDENTIFIER",
// "INTCONSTANT",
// "FLOATCONSTANT",
// "BOOLCONSTANT",
// "LEFT_PAREN",
// "RIGHT_PAREN",
// "LEFT_BRACKET",
// "RIGHT_BRACKET",
// "DOT",
// "FIELD_SELECTION",
// "INC_OP",
// "DEC_OP",
// "VOID",
// "COMMA",
// "FLOAT",
// "INT",
// "BOOL",
// "VEC2",
// "VEC3",
// "VEC4",
// "BVEC2",
// "BVEC3",
// "BVEC4",
// "IVEC2",
// "IVEC3",
// "IVEC4",
// "MAT2",
// "MAT3",
// "MAT4",
// "TYPE_NAME",
// "PLUS",
// "DASH",
// "BANG",
// "TILDE",
// "STAR",
// "SLASH",
// "PERCENT",
// "LEFT_OP",
// "RIGHT_OP",
// "LEFT_ANGLE",
// "RIGHT_ANGLE",
// "LE_OP",
// "GE_OP",
// "EQ_OP",
// "NE_OP",
// "AMPERSAND",
// "CARET",
// "VERTICAL_BAR",
// "AND_OP",
// "XOR_OP",
// "OR_OP",
// "QUESTION",
// "COLON",
// "EQUAL",
// "MUL_ASSIGN",
// "DIV_ASSIGN",
// "MOD_ASSIGN",
// "ADD_ASSIGN",
// "SUB_ASSIGN",
// "LEFT_ASSIGN",
// "RIGHT_ASSIGN",
// "AND_ASSIGN",
// "XOR_ASSIGN",
// "OR_ASSIGN",
// "SEMICOLON",
// "PRECISION",
// "IN",
// "OUT",
// "INOUT",
// "INVARIANT",
// "CONST",
// "ATTRIBUTE",
// "VARYING",
// "UNIFORM",
// "SAMPLER2D",
// "SAMPLERCUBE",
// "HIGH_PRECISION",
// "MEDIUM_PRECISION",
// "LOW_PRECISION",
// "STRUCT",
// "LEFT_BRACE",
// "RIGHT_BRACE",
// "IF",
// "ELSE",
// "WHILE",
// "DO",
// "FOR",
// "CONTINUE",
// "BREAK",
// "RETURN",
// "DISCARD",
// "PREPROCESSOR_DIRECTIVE",


enum UType{
    VEC(Size),
    MAT(Size),
    SCALAR(ScalarType),
}

enum ScalarType {
    BOOL,
    INT,
    UINT,
    FLOAT,
    DOUBLE,
}

enum Size {
    TWO,
    THREE,
    FOUR,
}